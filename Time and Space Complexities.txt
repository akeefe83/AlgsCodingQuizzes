Time and Space Complexity for Staircase:

	The time complexity of this solution is O(n) as the for loop runs for as many lines that you want to create a staircase for, or in better terms proportional to the 	input. The space complexity of this solution is O(1), as the only values created are strings and not any sort of data structure like an array or list that would take up a large amount of space as the loop continues.

Time, Space Complexity, and Recursive Definition of Alternating Character:

	The time complexity of this solution is O(n), as with each call to the recursive function the function itself removes one character from the string and compares two characters to each other. This means that it has to iterate through the entire length of the string, completing a comparison for each character as it decides to either delete or keep the character. The space complexity is O(n), since no new arrays or large data structures are created, but new substrings are made for each call to the recursive function and a new amount of space is allocated with each call, and this is completed n number of times. The way the recursion for this function works is by first checking if the length of the string is 1, which would mean no deletions need to be completed. If the string is any larger than that it checks the first two characters to see if they are the same as each other. If they are the string then "deletes" the duplicate character at position 1, and then calls the function again to check the new string which has removed this duplicate character, and increases the number of deletions by 1. If the two characters are not the same then no increase is applied to the integer tracking deletions, and the string moves from checking the current first character to the next character in the string by updating s to be a substring from the second character to the last character, and calling the function on this string. This means that the function will continue to reduce the size of the string until it is of length one, at which point the base case is met, and then all of the functions return on themselves to get the total number of deletions completed. 

	